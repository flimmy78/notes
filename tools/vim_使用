vi(vim)是上Linux非常常用的编辑器，很多Linux发行版都默认安装了vi(vim)。vi(vim)命令繁多但是如果使用灵活之后将会大大提高效率。vi是“visual interface”的缩写，vim是vi IMproved(增强版的vi)。在一般的系统管理维护中vi就够用，如果想使用代码加亮的话可以使用vim。下面vps侦探整理一下vi的使用教程：包含vi的基本介绍、使用模式、文件的打开关闭保存、插入文本或新建行、移动光标、删除、恢复字符或行、搜索等等，算是一篇比较适合新手学习vi的教程。

vi有3个模式：插入模式、命令模式、低行模式。

插入模式：在此模式下可以输入字符，按ESC将回到命令模式。
命令模式：可以移动光标、删除字符等。
低行模式：可以保存文件、退出vi、设置vi、查找等功能(低行模式也可以看作是命令模式里的)。

一、打开文件、保存、关闭文件(vi命令模式下使用)

vi filename       //打开filename文件
:w       //保存文件
:w vpser.net //保存至vpser.net文件
:q          //退出编辑器，如果文件已修改请使用下面的命令
:q!        //退出编辑器，且不保存
:wq         //退出编辑器，且保存文件

二、插入文本或行(vi命令模式下使用，执行下面命令后将进入插入模式，按ESC键可退出插入模式)

a      //在当前光标位置的右边添加文本
i       //在当前光标位置的左边添加文本
A     //在当前行的末尾位置添加文本
I      //在当前行的开始处添加文本(非空字符的行首)
O     //在当前行的上面新建一行
o     //在当前行的下面新建一行
R    //替换(覆盖)当前光标位置及后面的若干文本
J    //合并光标所在行及下一行为一行(依然在命令模式)

三、移动光标(vi命令模式下使用)

1、使用上下左右方向键

2、命令模式下：h   向左、j   向下 、k   向上、l  向右。
空格键 向右、Backspace  向左、Enter  移动到下一行首、-  移动到上一行首。

四、删除、恢复字符或行(vi命令模式下使用)

x         //删除当前字符
nx         //删除从光标开始的n个字符
dd      //删除当前行
ndd   //向下删除当前行在内的n行
u       //撤销上一步操作
U      //撤销对当前行的所有操作

五、搜索(vi命令模式下使用)

/vpser     //向光标下搜索vpser字符串
?vpser     //向光标上搜索vpser字符串
n           //向下搜索前一个搜素动作
N         //向上搜索前一个搜索动作

六、跳至指定行(vi命令模式下使用)

n+        //向下跳n行
n-         //向上跳n行
nG        //跳到行号为n的行
G           //跳至文件的底部

七、设置行号(vi命令模式下使用)

:set  nu     //显示行号
:set nonu    //取消显示行号

八、复制、粘贴(vi命令模式下使用)

yy    //将当前行复制到缓存区，也可以用 "ayy 复制，"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。
nyy   //将当前行向下n行复制到缓冲区，也可以用 "anyy 复制，"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。
yw    //复制从光标开始到词尾的字符。
nyw   //复制从光标开始的n个单词。
y^      //复制从光标到行首的内容。  VPS侦探
y$      //复制从光标到行尾的内容。
p        //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用"ap 进行粘贴。
P        //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用"aP 进行粘贴。

九、替换(vi命令模式下使用)

:s/old/new      //用new替换行中首次出现的old
:s/old/new/g         //用new替换行中所有的old
:n,m s/old/new/g     //用new替换从n到m行里所有的old
:%s/old/new/g      //用new替换当前文件里所有的old

十、编辑其他文件

:e otherfilename    //编辑文件名为otherfilename的文件。

:sp otherfilename   //打开文件名otherfilename 在同一窗口

十一、修改文件格式

:set fileformat=unix   //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M。

十二 、可视 块选中
v    从光标当前位置开始，光标所经过的地方会被选中，再按一下v结束。 

V    从光标当前行开始，光标经过的行都会被选中，再按一下Ｖ结束。 

Ctrl + v   从光标当前位置开始，选中光标起点和终点所构成的矩形区域，再按一下Ｃtrl + v结束。 

ggVG 选中全部的文本， 其中gg为跳到行首，V选中整行，G末尾

十三、比较文件
meld  //图形化比较工具
vimdiff a  b // 比较文件a， b 差别

★ 跳转到下一个diff点：
请使用 ]c 命令
★ 跳转到前一个diff点：
请使用 [c 命令
如果在命令前加上数字的话，可以跳过一个或数个差异点，从而实现跳的更远。比如如果在位于第一个差异点的行输入"2]c"，将越过下一个差异点，跳转到第 三个差异点。
★ 文件比较的最终目的之一就是合并，以消除差异。如果希望把一个差异点中当前文件的内容复制到另一个文件里，可以使用命令：
dp （diff "put"）
★ 如果希望把另一个文件的内容复制到当前行中，可以使用命令：
do (diff "get"，之所以不用dg，是因为dg已经被另一个命令占用了，所以用了diff "obtain")
★ 如果希望手工修改某一行，可以使用通常的vim操作。如果希望在两个文件之间来回跳转，可以用下列命令序列：Ctrl-w, w
★ 在修改一个或两个文件之后，vimdiff会试图自动来重新比较文件，以便实时地反映比较结果。但是有时候会处理失败，这个时候就需要手工来刷新。
:diffupdate
★ 如果希望撤销修改，可以和平常用vim编辑一样，直接<ESC>, u 
★ zo （folding open）打开折叠代码。之所以用z这个字母，是因为它看上去比较像折叠着的纸:)
★ zc （folding close）重新折叠起来。
★ 补充一条： 如果想交换上/下、左/右两个分隔窗口的位置，可以使用 ctrl-w,r 命令

十四、 搜索命令
find  搜索文件
find . -name test | xargs grep "test2"
grep 搜索字符
grep ”test“ -Inr ./*
混合使用
find . -name test | xargs grep "test2"

十五，fg 命令 在终端下打开多个程序然后像在图形界面下那样相互切换

使用 vim 时，在普通模式下按 ctrl + z 就能返回终端，这时候你可以继续做任何事情，甚至可以再打开一个 vim。
如何返回已经打开的程序呢？很简单，使用 jobs 命令可以看到当前环境下的所有任务编号，然后通过 fg NUM 命令切换至对应任务，其中 NUM 是任务编号。比如：
fg 3
命令可以返回至编辑 judge_update.py 的那个 vim 里。
注：fg 命令省略参数时，返回上一个程序，就像图形界面下 alt + tab 的效果



 
总结：vi(vim)教程虽然有比较多的命令，但是只要勤加练习，相信你会很快的熟练掌握，同时也会给你的工作或学习带来更高的效率。当如果不知道自己处在什么模式时可以按2次Esc键即可回到命令模式，会有最后提醒一点：注意大小写！！！
