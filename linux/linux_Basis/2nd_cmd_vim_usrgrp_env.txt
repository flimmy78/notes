Linux用户管理
    
一、Linux基本命令

Linux是严格区分大小写的

--

# vino-preferences 	        --配置VNC的命令

# vncviewer 10.1.1.35:0		--客户端连接的命令


GNU Bourne-Again SHell

	       用户 	
		｜
		｜
	       bash  终端相当于是bash的接口和工具	cat /etc/shells 
		|			bash-3.2-24.el5.i386.rpm 
		|
	    内核kernel   1,系统接口调用		www.kernel.org
		|	2，内存管理
		|	3，文件系统管理
		|	4，进程管理	
		|	5，硬件驱动
		|
	     物理硬件 


内部命令：	bash这个软件包自带的命令


man cd
       bash,  :,  .,  [, alias, bg, bind, break,
       builtin, cd, command, compgen,  complete,
       continue,  declare,  dirs,  disown, echo,
       enable, eval, exec, exit, export, fc, fg,
       getopts, hash, help, history, jobs, kill,
       let, local, logout, popd, printf,  pushd,
       pwd,  read, readonly, return, set, shift,
       shopt,  source,  suspend,  test,   times,
       trap,  type, typeset, ulimit, umask, una-
       lias, unset, wait -  bash  built-in  com-
       mands, see bash(1)


外部命令：	安装外部软件所带的命令


命令的分类：
    
	内部命令                    Shell在内部代码中实现的命令

	man type                    查看bash Shell自带的命令

	外部命令                    Shell以外的命令

	用type命令查看内部命令还是外部命令

	type cd                 提示cd is a shell builtin则说明是内部命令

	type mount              提示mount is /bin/bash 告诉外部命令的位置

-------------------------------------------------------------

帮助命令

	command -h
	command --help

	help command		--内部命令才可以这样查看帮助
    
	man                 注重于应用，也是最常用的帮助方法
        
		man 的帮助文档存放的位置
		    
		    /usr/share/man

		man 的帮助文档分类
		    
		    1                   普通用户命令
		    2                   系统核心调用的函数工具
		    3                   常用的一些函数与函数库
		    4                   设备文件的说明
		    5                   配置文件与一些其它格式的文件
		    6                   游戏相关
		    7                   网络协议相关
		    8                   管理员可操作的命令
		    9                   系统内核相关的文件

		在 man 帮助里：
		    
		    /c                  搜索c关键字
		    n                   下一个关键字
		    N                   上一个关键字
		    q                   退出
            

	info                        注重于介绍，不常用
        
		帮助文档存放位置
		    
		    /usr/share/info

		进入帮助界面
		    
		    ?                   info命令帮助
		    空格键              向下翻一页
		    tab                 在结点之间移动，有结点的地方通常会以*显示，将光标移动结点位置按回车可进入结点
		    b                   移动光标到该文章的第一个结点处
		    e                   移动光标到该文章的最后一个结点处
		    n                   前往下一个info页
		    p                   前往上一个info页
		    u                   向上移动一层
		    s(/)                在info里搜索
		    h                   显示帮助菜单
		    q                   退出

-------------------------------------------------------------

目录命令
    
	pwd                         查看当前所在目录的路径

	cd                          切换当前所在目录

		绝对路径
		    
		    cd /root/Desktop    指从根目录开始的路径

		相对路径
		    
		    cd root/            指以当前目录开始的路径

		.                       代表当前所在目录

		..                      代表当前的父目录

		-                       代表上一次所在的目录

		~                       代表当前登录用户的家目录


	mkdir                       创建一个目录

		mkdir test              在当前目录下创建test目录
		mkdir /tmp/test         在根目录下tmp目录里创建test目录
		mkdir file{1..100}      在当前目录下创建file1到file100的目录,这里会创建100个目录
		mkdir "file{1..100}"    在当前目录下创建file{1..100}目录,这里只创建一个目录
		mkdir -p a/b/c          在当前目录下创建a/b/c目录树


	rmdir                       只能删除空目录

		rmdir test              删除当前目录的test目录，test必须是空目录
		rmdir /tmp/test         删除/tmp下的test目录
		rmdir file{1..100}      删除file1到file100的目录
		rmdir "file{1..100}"    删除file{1..100}目录


-------------------------------------------------------------

文件命令
    
	ls                          列出当前文件夹下的所有文件

		ls -a                   列出当前目录下所有文件，包含隐藏文件

		ls -l                   以详细列表形式列出当前目录下的所有文件

		ls -R                   列出当前目录所有文件，包含子目录内所有文件
		drwxr-xr-x  1   root    root    2062 2011-01-04 file1

		[root@li ~]# which ls
		alias ls='ls --color=tty'
			/bin/ls
		[root@li ~]# rpm -qf /bin/ls
		coreutils-5.97-23.el5
		[root@li ~]# rpm -ql coreutils-5.97-23.el5


		ls /		--有颜色
		/bin/ls /	--没颜色	
		dir /		--没颜色

		--原因是ls 被做了别名
		[root@li ~]# which ls
		alias ls='ls --color=tty'
			/bin/ls

		想自己做一个别名
		# alias dir='dir --color'
		# dir /    --就有颜色了

		文件类型和文件权限 文件的硬链接数 文件所属用户  文件所属用户组  文件大小  文件的最后修改日期  文件名

		文件类型：
		    
		    c                   字符设备
		    b                   块设备
		    l                   符号链接
		    s                   socket文件
		    p                   管道文件
		    d                   文件夹
		    -                   普通文件

		常用搭配：
		    
		    ls -al              显示所有文件包括隐藏文件列表
		    ls -lt              显示按日期时间排序后的文件列表
		    ls -lh              显示计算大小为KB为单位的文件列表
		    ls -dl              显示文件夹详细列表

		用ls对一个目录大小由大到小进行排序列表	-S
		按时间由最新时间到最老时间排序列表		-t



	touch                       新建文件
        
	        touch file              创建file空文件，如果file存在则更新file的存取和修改时间
	        touch -c file           如果file不存在，则不创建文件
	        touch -r file1 file     更新file时间和file1相同
	        touch -a file           更新file的存取时间
	        touch -m file           更新file的修改时间
	        touch file{2,3,4}       同时创建file2,file3,file4三个空文件
	        touch "file{2,3,4}"     创建file{2,3,4}一个空文件

	sequence 序列 
		seq 100  产生1到100的序列


	stat 1
		Access: 2011-06-27 14:11:39.000000000 +0800
		Modify: 2011-06-27 14:11:39.000000000 +0800
		Change: 2011-06-27 14:11:39.000000000 +0800

	touch 1		--再创建1，不会报“文件已经存在的错误"只是改变了文件的时间相关的属性

		stat 1
		Access: 2011-06-27 14:12:03.000000000 +0800
		Modify: 2011-06-27 14:12:03.000000000 +0800
		Change: 2011-06-27 14:12:03.000000000 +0800


	cp                          复制文件

	        cp file dirs/           把file文件复制到dirs目录下
	        cp -r dir1/ dir2/       把dir1目录复制到dir2目录下
	        cp -a file dirs/        把file文件复制到dirs目录下，保留文件的原来属性
	        cp  -rf dir1/ dir2/     强制复制文件夹，不提示
	        cp -rvf dir1/ dir2/     把dir1目录复制到dir2目录下，并且显示复制过程


	mv                          移动和重命名文件

	        mv file dirs/           把file文件移动到dirs目录下
	        mv file file2           把file文件重命名为file2
	        mv -u dir1/* dir2/      把dir1目录下所有文件移动到dir2目录下，并且根据文件时间来决定要不要移动


	rename                      批量文件重命名

        	rename .conf .html *.conf  把所有后缀以.conf的文件名里出现.conf就改成.html 


	rm                          删除文件
        
	        rm file*                删除所有file打头的文件
	        rm -i file*             提示是否确定删除
	        rm -f file*             不提示，强行删除
	        rm -r dir2              删除目录

-------------------------------------------------------------

文件阅读命令
        
	cat                         文件查看命令

		cat    /etc/passwd      查看/etc/passwd内容

		cat -n /etc/passwd      查看/etc/passwd内容并且编号

		cat -b /etc/passwd      查看/etc/passwd内容并且给非空行编号

	more                

		more /etc/passwd        逐屏查看/etc/passwd文件内容

	less

		less /etc/passwd        查看/etc/passwd文件内容，和more不同的是可以上下滚动

	head

		head /etc/passwd        查看/etc/passwd前10行内容

		head -n 30 /etc/passwd  查看/etc/passwd前30行内容

	tail

		tail /etc/passwd        查看/etc/passwd后10行内容

		tail -n 30 /etc/passwd  查看/etc/passwd后30行内容

		tail -f /etc/passwd     实时查看/etc/passwd文件内容


	重定向

		标准输入    代码 0      默认设备为键盘   
		标准输出    代码 1      默认设备为屏幕   
		错误输出    代码 2      默认设备为屏幕   

		ls  /etc/passwd > output.txt        标准正确输出重定向到output.txt
		ls  /etc/shadow >> output.txt       标准正确输出追加重定向到output.txt
		ls  dddddd 2> error.txt             标准错误输出重定向到error.txt
		ls  dddddd 2> /dev/null             标准错误输出重定向到黑洞
		ls  ddddd /etc/passwd &> /dev/null  标准正确输出标准错误输出全都重定向到黑洞

	管道

		cat /etc/passwd | less          |之前的命令执行的结果做|后命令的参数


===============================================================================

二、VIM编辑器的使用

	vi  vim (增强版vi,现在各版本的linux都带有vim)

	三种模式：
	普通模式：控制光标移动，删除字符，段落复制(按ESC)
	编辑模式：包含插入模式和替换模式，新增文字和修改文字
	命令行模式/末行模式：保存文字，离开vim，以及其它设置

	vim newfile  新建一vim空白文件进行编辑

	普通模式
	编辑模式下按ESC切换为普通模式
	命令        说明

	移动：

	h           将光标向左移动一格
	l           将光标向右移动一格
	j           将光标向下移动一格
	k           将光标向上移动一格
	^           光标移动到行首,即第一有效字符位置
	0           将光标移动到该行的行首，行的第一格位置
	$           将光标移动到行尾
	H           将光标移动到该屏幕的顶端
	M           将光标移动到该屏幕的中间
	L           将光标移动到该屏幕的底端
	gg          将光标移动到文章的首行
	G           将光标移动到文章的尾行
	w           将光标移动到下一单词
	b           将光标移动到上一单词
	e           将光标移动到下一单词，光标到下一单词词尾
	W           和w功能一样，只不过以.或-或)字符为分界
	B           和b功能一样，只不过以.或-或)字符为分界
	E           和e功能一样，只不过以.或-或)字符为分界
	f           f后跟一字符可直接跳到本行光标之后有此字符位置
	F           F后跟一字符可直接跳到本行光标之前有此字符位置
	t           和f一样功能，只不过光标停在要搜索字符前一字符位置
	T           和T一样功能，只不过光标停在要搜索字符后一字符位置
	zt          将当前位置置于屏幕顶端
	zb          将当前位置置于屏幕底端
	zz          将当前位置置于屏幕中间
	zf          创建折行
	zc          折叠
	zo          打开折叠
	%           跳到匹配的括号
	Ctrl+u      将窗口向上移动半屏
	Ctrl+d      将窗口向下移动半屏
	Ctrl+f      向前滚动一整屏
	ctrl+b      向后滚动一整屏
	ctrl+g      在窗口下方显示信息，告诉当前文件中的位置和文件名等
	Ctrl+o      跳到上次光标位置
	‘’          跳到上次光标位置，和ctrl+o不同，它只能和上一次光标位置和当前位置来回跳转
	ctrl+i      和ctrl+o功能相反
	m           有名标记，在想要做标记位置按ma， 再到移动其它地方，当想回到做标记位置时,按'a就跳回做标记位置

	简单搜索：

	/           /后跟要搜索的关键词
	n       移到下一个找到关键词位置
	/\<the  找以the开头的关键词
	/the\>  找以the结尾的关键词
	/t.e    中间替换任何一个字符搜索关键词
	*           移动关键词按*，会自动高亮，再按n就可查找此关键词

	操作符命令：

	x           删除当前光标下的字符,相当于dl,d 和 l的组合使用
	X           删除当前光标前一个字符,相当于dh
	u           恢复上一次命令，针对字符
	U           恢复上一次命令，针对行
	ctrl+r      和u相匹配重做
	r           替换当前光标位置字符
	dw          删除一个单词
	D           删除当前光标后面所有字符，相当于d$
	d^          删除当前光标前面所有字符
	d0          删除当前光标前所有的字符，置行首
	dd          删除一行
	c           和d功能一样，只不过删除完会进入插入模式
	yy          选定光标所在行复制
	p           粘贴yy复制的行,贴在光标所在位置之右
	P           粘贴yy复制的行,贴在光标所在位置之左
	cw          删除光标所在的单词并且进入插入状态
	R           进入替换模式
	i           在当前位置进入插入模式
	I           将光标移动到行首进入插入模式
	o           在本行向下新建一行进入插入模式
	O           在本行向上新建一行进入插入模式
	a           将光标之后进入插入模式
	A           将光标移动到行尾进入插入模式
	s           删除光标位置字符进入插入模式,相当于cl
	S           删除光标所在行进入插入模式，相当于cc
	.           重复上一次命令
	~           改变当前光标下字符的大小写
	v           进入字符可视模式
	V           进入行可视模式

	可视模式：

	vjjjjd      选中四个字符删除
	Ctrl+v      可选择列进行操作

	d 和 p 组合使用
	d 删除相当于剪切，并没有完全丢掉，再按p可以粘贴

	交换两个字符
	x和p组合使用


	命令行模式：

	:                   进入命令行模式

	filetype plugin indent on
	开启自动识别文件类型，自动用对应文件类型的搭配编辑选项

	map <F5> ihello<ESC>    键盘映射F5插入hello单词

	set number          显示行号
	set nonumber        关闭行号，所有命令前加no为关闭
	set ruler           在右下角显示当前光标位置
	set autoindent      开始新行时对该行施行上一行缩进方式
	set nocompatible    不完全与Vi兼容，所以确保关闭
	set nowrap          不要折行显示
	set list            显示制表符
	syntax enable       打开色彩
	colorscheme evening 切换颜色方案

	set ignorecase      忽略大小写搜索
	set hlsearch        在关键词上按*，自动高亮
	set incsearch       搜索时输入一个字符会自动跳到匹配位置，按回车再确定是否要搜索此关键词
	set nowrapscan      搜索到头就停止，默认搜索到头会到最后一个匹配位置


	marks               查看关于标记的列表
	scriptnames         查看vimrc的具体名称和位置
	options             新窗口注释选项列表

	split               横分一新窗口
	3split          指定新分的窗口高度为3
	vsplit              竖分一新窗口
	3vsplit         指定新分窗口宽度为3

	Ctrl+w w        窗口之间切换

	!                   执行shell命令
	r!                  执行shell命令并把结果插入到当前光标位置
	o                   后面跟文件路径，可以横分屏打开文件
	O                   后面跟文件路径，可以竖分屏打开文件
	w                   保存
	q                   退出
	qall                全部退出
	wqall               全部保存退出
	qall                全部强制退出

	s/if/hello/         把本行的第一个if替换成hello
	1,$s/if/hello/      把第一行到最后一行的每行的第一个if替换成hello
	1,$s/if/hello/g     把第一行到最后一行的每行的if替换成hello
	:240                快速定位到240行

	打开多个文档

	vim -o a.txt b.txt          横屏打开两文件
	vim -O a.txt b.txt          竖屏打开两文件
	vim a.txt +42               打开a.txt光标定到42行


===============================================================================

三、用户管理

	用户分类

		管理员                      user id一定为0，务必唯一
		系统用户                    伪用户,user id 1-499,默认是不允许登录系统，用于给予某些服务运行时候所用的身份
		普通用户                    user id 500-60000, 通过手工或都命令建立起来的用户，默认可以进行登录系统

	用户管理

		用户相关配置文件

		/etc/passwd
		/etc/shadow

		vim /etc/passwd

		第一列：用户名
		第二列：密码    x代表密码存放在/etc/shadow里，如果去掉x就代表此用户没有密码
		第三列：uid 用户ID值操作系统是不认识用户名，只认uid
		第三列：gid,用户组的ID
		第五列：描述项
		第六列：指定家目录
		第七列：指定bash

		vim /etc/shadow

		第一列：用户名
		第二列：真实的密码，经过加密的，以*或都!号开头的不能登录
		第三列：上一次修改密码的时间，linux以1970年1月1日到现在的天数来算的
		第四列：修改密码后几天内不允许再修改， 0代表不限制
		第五列：多少天内必须修改密码，99999代表不限制
		第六列：过期前几天给你一个警告信息
		第七列：密码过期后的一个宽限时间
		第八列：这里可以写一个实际的账号过期天数，也是以1970年1月1日到现在来算的，多用于收费系统
		第九列：保留，留着以后功能扩展

	用户命令相关配置文件,保存useradd命令创建用户使用的默认值

		/etc/default/useradd
		/etc/login.defs


	用户相关命令

		useradd/adduser
		userdel/deluser
		usermod
		passwd

		useradd a                   创建一a用户
		useradd -g kyo a            新建a用户并且把a用户添加进kyo用户组
		userdel a                   删除a用户
		userdel -r a                删除a用户并且删除a的家目录和邮件目录
		passwd a                    修改a用户密码
		passwd -l a                 临时关闭用户,或修改/etc/shadow第二个字段加*
		passwd -u a                 释放临时关闭用户
		usermod                     修改用户信息
		-u                      修改UID
		-g                      修改GID
		-d                      指它家目录
		-s                      指用bash
		usermod -G kyo a            把a用户添加进kyo用户组


	用户信息相关的命令
	chfn                        修改一个用户相关的信息
	finger                      查看一个用户相关的信息


	组管理

		相关配置文件

		/etc/group
		/etc/gshadow

		vim /etc/group
		第一列：组名
		第二列：密码，x代表密码在/etc/gshadow
		第三列：gid
		第四列：代表属于这个组的用户名

		vim /etc/gshadow
		第一列：组名
		第二列：密码
		第三列：组管理员
		第四列：组成员

	相关命令

		groupadd                添加一新用户组
		groupdel                删除一用户组
		groupmod                修改用户组信息
		gpasswd                 修改用户组密码
		gpasswd -a a root       把a用户放进root用户组
		gpasswd -A a root       把a用户放进root用户组并当管理员
		gpasswd -d a root       把a用户从root用户组里删除
		newgrp root             把当前用户临时添加进root用户组，重新登录失效
		id                      显示用户的ID和组ID

	用户身份切换

		su - a                      完全切换，不继承上一个用户的环境变量，即sbin目录下的命令用不了
		su   a                      不完全切换，继承上一个用户的环境变量，可以用sbin目录下的命令


	手工创建用户

		第一步：在/etc/passwd添加一行信息
		bean:x:534:603::/home/bean:/bin/bash
		第二步：在/etc/shadow添加一行信息
		grub-md5-crypt 创建md5密码，把密码替换下面两个!!位置
		bean:!!:15035:0:99999:7:3::
		第三步：在/etc/group添加组的信息
		bean:x:603:
		第四步：在/etc/gshadow添加组的密码信息
		bean:!::
		第五步：创建家目录
		mkdir /home/bean
		第六步：把用户的环境变量文件复制到家目录
		cp /etc/skel/.bash* /home/bean
		chown bean:bean /home/bean/ -R
		chmod 700 /home/bean/ -R
		第七步：创建用户的邮件文件
		touch /var/mail/bean
		chown bean:bean /var/mail/bean
		chmod 660 /var/mail/bean


================================================================================

四、Linux权限

	ls -l

		-   rw-             r--           r--     1 root root 4383 2011-03-01 01:37 readme.txt
		所属用户权限u 所属用户组权限g 其它人权限o

		r                           read 读权限
		针对文件夹，具有r权限，就代表具有对这个文件夹进行列表的权限
		针对文件，具有r权限，就代表具有读取这个文件的内容的权限

		w                           write 写权限
		针对文件夹，具有w权限，代表具有他能在此文件夹里创建修改等操作
		针对文件，具有w权限，代表具有修改此文件内容的权限

		x                           execute 执行权限
		针对文件夹，具有x权限，代表可以切换到此文件夹
		针对文件，具有x权限，代表可以运行它，文件必须是可执行或脚本等


	二进制转八进制：

		000     0       ---
		001     1       --x
		010     2       -w-
		011     3       -wx
		100     4       r--
		101     5       r-x
		110     6       rw-
		111     7       rwx

		rwx, r-x, r-x
		7    5      5

-------------------------------------------------------------

	chmod                           修改权限的命令

	chmod u+x,g+r,o-r file      修改file文件用户权限加上可执行权限，用户组也加上读权限，其它用户减去读权限
	chmod u=rwx,g=rw,o=r file   修改file文件用户权限为可读可写可执行，用户组为可读可写权限，其它用户为读权限
	chmod 755 file              修改file文件用户权限为可读可写可执行权限，用户组为可读可执行权限，其它用户也为可读可执行权限
	chmod 755 dirs -R           修改dirs目录里所有文件的用户权限为可读可写可执行权限，用户组为可读写执行权限，其它用户也为可读可执行权限

-------------------------------------------------------------

	chown                           修改文件用户所属

	chown tom file              修改file文件所属用户为tom
	chown tom:jack file         修改file文件的所属用户为tom,所属用户组为jack
	chmod jack.root dirs -R     修改dirs目录里所有文件所属用户为jack，所属用户组为root


-------------------------------------------------------------

	umask                           默认创建文件或文件夹权限掩码

	管理员默认umask为022
	普通用户默认umask为002

	默认创建文件夹权限是777,而掩码设置为022,则要减去掩码，默认创建文件夹权限则变成755
	默认创建文件权限是666，而掩码设置为022,则减去掩码，默认创建文件权限为644


-------------------------------------------------------------

	特权位                          针对命令文件，设定setuid、setgid

	针对命令文件设定setuid、setgid

	没加特权位之前，命令运行的时候所采用的身份是运行者的身份
	添加了特权位之后，命令运行的时候采用的身份不再是运行者的身份，而是命令本身的所属者
	例：passwd touch

	针对目录设定setgid

	设定了组的特权位后，在该文件夹下创建子文件或子目录，它们自动继承文件夹的所属组的身份,子目录会继承目录的特权位


	chmod u+s/g+s  file         给file设置特权位 
	chmod u-s/g-s  file         给file取消特权位


-------------------------------------------------------------

	粘贴位                          防止其它用户删除文件，针对其它用户，管理员和本人可以删除，针对目录有效，文件没有用

	chmod o+t dirs              给dirs目录设置粘贴位


-------------------------------------------------------------

	文件特殊属性

	lsattr                      查看文件特殊属性

	chattr                      添加或修改文件特殊属性

	chattr +i file          添加i属性，管理员也不得更改
	chattr +a file          只能追加内容，不得修改内容，如果有i属性，先取消才能加a属性
	chattr -i/-a file       取消文件特殊属性

===============================================================================

五、环境变量、命令别名与命令历史

	env                             显示当前shell定义的环境变量，包括当前用户的环境变量 

	set                             显示当前shell定义的私有变量，包括用户环境变量,按变量名称排序

	export                          显示当前导出成用户变量shell变量，并显示变量的属性，按变量名称排序


	用户环境变量相关配置文件
	路径：/home/用户名/  或  /root/

	.bash_history               用户退出登录之后记录之前的历史命令，logout后才会把当前命令历史添加到此文件
	.bash_logout                用户退出登录时执行的代码，前提是logout退出或su切换用户用exit或logout才会生效
	.bash_profile               用户的环境变量常规设定的地方,用户登录时执行
	.bashrc                     命令别名的设定地方，打开终端时执行

	全局环境变量相关配置文件

	/etc/bashrc                 和上述一样，只不过这是全局，所有用户都影响
	/etc/profile

	source /etc/profile         立即生效对/etc/profile文件的修改
	. /etc/profile              功能同上


	命令历史

	history                     查看当前用户的历史命令

	!!                      重复执行上一条命令
	!a                      重复执行上一条以a为首的命令
	!100                    重复执行第100条命令
	!$                      获取上一条命令的参数，多用于获取路径

	history 10                  显示最后10条命令历史
	history -c                  清除命令历史
	history -r  a.history       把a.history的命令读到命令历史列表中
	history -w  b.history       把当前命令历史写到b.history文件中


	命令别名

	alias                       列出目前所有的别名设置
	alias ls='ls -l'            创建ls -l的别名为ls, 只在本shell生效，而且重启终端即失效
	unalias ls                  释放ls -l的别名

	永久生效就把alias创建加入到bashrc里即可


	bash快捷键

	tab                         一次补完命令行或文件名，二次可以列出所有匹配的选择
	ctrl+c                      结束当前的任务
	ctrl+z                      当前任务暂停放在后台
	ctrl+l                      清屏
	ctrl+d                      标准输入结束或光标左边的一个字符
	ctrl+h                      删除光标右边的一个字符
	ctrl+u                      删除光标左边的所有字符
	ctrl+k                      删除光标右边的所有字符
	ctrl+t                      调换光标前两个字符的次序
	ctrl+a                      将光标移动到命令首字符
	ctrl+e                      将光标移动到命令尾字符
	ctrl+n                      下一个命令历史
	ctrl+p                      上一个命令历史
	ctrl+f                      移动光标到后一个字符
	ctrl+b                      移动光标到前一个字符


===============================================================================
