用Gradle 构建你的android程序
http://www.cnblogs.com/youxilua/archive/2013/05/20/3087935.html


buildscript{} : Configures the build script classpath for this project.
说白了就是设置脚本的运行环境

repositories{} : Returns a handler to create repositories which are used for
retrieving dependencies and uploading artifacts produced by the project.
大意就是支持java 依赖库管理（maven/ivy）,用于项目的依赖。这也是gradle
强力的地方。。。 
    repositories{
        mavenCentral()
    }

dependencies{} : The dependency handler of this project. The returned
dependency handler instance can be used for adding new dependencies. For
accessing already declared dependencies, the configurations can be used.
依赖包的定义。支持maven/ivy，远程，本地库，也支持单文件，如果前面定义了repositories{}maven
库，使用maven的依赖（我没接触过ivy。。）的时候只需要按照用类似于com.android.tools.build:gradle:0.4，
gradle 就会自动的往远程库下载相应的依赖。


apply plugin: 声明构建的项目类型，这里当然是android了。。。

android{}   设置编译android项目的参数，接下来，我们构建android项目的所有配置都在这里完成。

----------------------------------------------------------------
构建一个Gradle android项目
  首先，你要安装Gradle 1.6 并且，写进系统的环境变量里面，所有的命令都是默认你已经配好了gradle
的环境。而且，已经已经升级了android sdk 22 

要用gradle构建你的有两种方式：（build.gradle 放到项目目录下）
    1）利用adt 22导出 build.gradle.
    2）复制别人写好的build.gradle 文件.
    3）根据gradle 规则，手写android 的build.gradle 文件。
个人推荐1,2 方法。。。。

如果你是第一次使用gradle 构建android项目建议你先使用gradle clean 把android gradle
插件，还有相关依赖包下载下来并且对环境进行初始化，如果出错了，一般可能是下载超时，
试多几次即可，最后你会看到如下提示：BUILD SUCCESSFUL

完成以上的步骤，就可以正式使用gralde 构建你的android项目了。

然后使用gradle build 就完成了android项目的构建了。如果，你是照着以上步骤走的话，
你将会想项目目录里面看到一个build 的目录，里面就是用gradle 构建android项目的全部了。

最终打包的apk 就在build/apk 目录下了。然后，你会发现，两个apk
[项目名]-debug-unaligned  [项目名]-release-unsigned

--------------------------------------------------------------------------------
Gralde 打包参数详解
默认输出 release apk 是没有签名的，那么我们需要签名的很简单，只需要在android{}里面补充加上加上即可。
###########################################
signingConfigs {
    myConfig{
        storeFile file("gradle.keystore")
            storePassword "gradle"
            keyAlias "gradle"
            keyPassword "gradle"
    }
}

buildTypes{
    release {
        signingConfig
            signingConfigs.myConfig
    } 
}
##########################################
然后，运行gradle clean gradle build ,这次在build/apk 你看到了多了一个[项目名]-release-unaligned，
从字面上面我就可以知道，这个只是没有进行zipAlign优化的版本而已。而[项目名]-release 就是我们签名，
并且zipAlign 的apk包了.

打混淆包只需要在原来的基础上加上
##########################################
buildTypes{
    release {
        signingConfig  signingConfigs.myConfig
            runProguard true
            proguardFile 'proguard-android.txt'
    }
}
##########################################

打多渠道包(Product Flavor)


---------------------------------------------------------------------------
用Gradle 构建你的android程序-依赖管理篇
http://www.cnblogs.com/youxilua/archive/2013/05/22/3092657.html

